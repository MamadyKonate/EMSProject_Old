# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Test .Net application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
  # name: build and test the application
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x','7.0.x']
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET version ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version:  ${{ matrix.dotnet-version }}
    
    - name: Go back one level
      run: cd ..
     # working-directory: ${{ github.workspace }}
      
    - name: Restore project dependencies    
      working-directory: ./EMSProject
    
      # restores the project depedencies and tools 
      run: dotnet restore
    - name: Build
      working-directory: ./EMSProject      
      run: dotnet build --no-restore
    
    # Getting out of the project to go back up 1 level, then get into EMSTestProject
    - name: Go back one level
      run: cd ..
      
    - name: Test
      working-directory: ./EMSTestProject
      run: dotnet test --no-build --verbosity normal

  build-docker-image:     
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: 'mamy02'
          password: 'Koudagbe02$'
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: 'mamy02/docker-demo'




      
  # Define a deploy to development environment job
  deployDev:
    name: Deploy to Development
    # Job runs only if the event is a pull request && github.event.ref == 'refs/heads/main'
    if: github.event_name == 'pull_request'
    
    # The job needs the build job to pass first
    # needs: [build]
    needs: [build-docker-image]
    runs-on: ubuntu-latest
    # Define some environment variables
    environment: 
      # The environment name must match the envrionment name in the repository
      name: Development
      # url: 'http//dev/myapp.com'
    steps:
      - name: Deploy
        run: echo Your code is being deployed to http//dev.ems.ie
  
  # Our deployment to staging environment
  deployStaging:
    name: Deploy to Staging    
    needs: [deployDev]
    runs-on: ubuntu-latest
    environment:
      name: Staging
      # url: 'http://test.myapp.com'
    steps:
    - name: Deploy
      run: echo I am deploying to staging http://test.ems.ie
  
# Deploy to production environment
  deployProduction:
    name: Deploy to Production
    needs: [deployStaging]
    runs-on: ubuntu-latest
    environment:
      name: Production
     # url: 'http://www.ems.ie'
    steps:
      - name: Deploy
        run: echo I am deploying to production
